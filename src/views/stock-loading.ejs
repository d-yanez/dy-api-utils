<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Stock Viewer</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-50 min-h-screen flex flex-col items-center justify-center">
  <!-- Loader -->
  <div id="loader" class="flex flex-col items-center">
    <div class="w-12 h-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
    <p class="mt-3 text-gray-600 font-medium">Cargando información del producto...</p>
  </div>

  <!-- Contenido dinámico -->
  <div id="content" class="hidden"></div>

  <script>
    const sku = "<%= sku %>";

    // --- Render principal (reutilizable para inicial y refresco) ---
    function renderProduct(vm) {
      return `
        <div class="bg-white shadow rounded-2xl p-6 max-w-3xl w-full mt-6">
          <div class="flex items-start gap-4">
            <img src="${vm.item.image}" alt="item" class="w-28 h-28 object-contain rounded-md border">
            <div>
              <h1 class="text-2xl font-bold mb-1">${vm.item.title}</h1>
              <p class="text-gray-700 text-sm">SKU: ${vm.sku}</p>
              <p class="text-gray-800 font-semibold mt-1">Stock total: ${vm.total}</p>
              <a href="${vm.item.url}" target="_blank" class="text-blue-600 hover:underline mt-2 inline-block">Ver publicación</a>
              <p class="text-xs text-gray-400 mt-1">
                (Cache: Stock ${vm._cache.stock}, ML ${vm._cache.ml})
              </p>
            </div>
          </div>

          <table class="w-full border-collapse mt-5 text-sm">
            <thead class="bg-gray-100">
              <tr>
                <th class="border p-2 text-left">SKU</th>
                <th class="border p-2 text-left">Ubicación</th>
                <th class="border p-2 text-left">Stock</th>
              </tr>
            </thead>
            <tbody>
              ${vm.rows.map(r => `
                <tr>
                  <td class="border p-2">${r.sku}</td>
                  <td class="border p-2">${r.location}</td>
                  <td class="border p-2">${r.stock}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>

          <div class="flex justify-end mt-4">
            <button id="refreshBtn" class="px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-all">
              🔄 Refrescar
            </button>
          </div>
        </div>`;
    }

    // --- Carga inicial ---
    fetch(`/stock/data/${sku}`)
      .then(res => res.json())
      .then(vm => showData(vm))
      .catch(err => showError(err));

    // --- Función de render ---
    function showData(vm) {
      const loader = document.getElementById('loader');
      const container = document.getElementById('content');

      loader.classList.add('hidden');
      container.classList.remove('hidden');
      container.innerHTML = renderProduct(vm);

      // evento del botón refrescar
      document.getElementById('refreshBtn').addEventListener('click', () => refreshData());
    }

    // --- Función de error ---
    function showError(err) {
      document.getElementById('loader').innerHTML =
        '<p class="text-red-500 font-semibold mt-3">Error al cargar datos</p>';
      console.error(err);
    }

    // --- Función de refresco ---
    function refreshData() {
      const loader = document.getElementById('loader');
      const container = document.getElementById('content');

      container.classList.add('hidden');
      loader.classList.remove('hidden');

      fetch(`/stock/data/${sku}?fresh=1`)
        .then(res => res.json())
        .then(vm => {
          container.innerHTML = renderProduct(vm);
          container.classList.remove('hidden');
          loader.classList.add('hidden');
          document.getElementById('refreshBtn').addEventListener('click', () => refreshData());
        })
        .catch(err => showError(err));
    }
  </script>
</body>
</html>